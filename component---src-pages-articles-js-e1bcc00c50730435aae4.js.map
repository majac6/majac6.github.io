{"version":3,"file":"component---src-pages-articles-js-e1bcc00c50730435aae4.js","mappings":"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","sources":["webpack://majac-resume/./src/components/ArticleCard.js","webpack://majac-resume/./src/components/Pagination.js","webpack://majac-resume/./src/pages/articles.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst ArticleCard = ({ article }) => {\n  const { frontmatter, fields, excerpt } = article;\n  \n  return (\n    <article className=\"bg-white border border-gray-200 rounded-lg p-6 transition-shadow\">\n      <div className=\"mb-3\">\n        <Link \n          to={`/article/${fields.slug}`}\n          className=\"text-lg font-bold text-gray-900 hover:text-primary-600 transition-colors\"\n        >\n          {frontmatter.title}\n        </Link>\n      </div>\n      \n      <p className=\"text-gray-600 text-base mb-4 line-clamp-3\">\n        {frontmatter.description || excerpt}\n      </p>\n      \n      <div className=\"flex items-center justify-between mt-2\">\n        <div className=\"flex items-center space-x-3\">\n          <time className=\"text-xs text-gray-400\">\n            {frontmatter.date}\n          </time>\n          {frontmatter.tags && frontmatter.tags.length > 0 && (\n            <div className=\"flex space-x-1\">\n              {frontmatter.tags.slice(0, 3).map((tag) => (\n                <span \n                  key={tag}\n                  className=\"px-2 py-0.5 border border-gray-200 bg-gray-50 text-gray-500 text-xs rounded-full font-normal\"\n                >\n                  {tag}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n        <Link \n          to={`/article/${fields.slug}`}\n          className=\"text-primary-600 hover:text-primary-700 text-xs font-medium underline underline-offset-2\"\n        >\n          읽기 →\n        </Link>\n      </div>\n    </article>\n  );\n};\n\nexport default ArticleCard; ","import React from 'react';\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      if (currentPage <= 3) {\n        for (let i = 1; i <= 4; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      } else if (currentPage >= totalPages - 2) {\n        pages.push(1);\n        pages.push('...');\n        for (let i = totalPages - 3; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        pages.push(1);\n        pages.push('...');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      }\n    }\n    \n    return pages;\n  };\n\n  return (\n    <div className=\"flex justify-center items-center space-x-1 mt-8\">\n      {/* 이전 페이지 버튼 */}\n      <button\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n        className={`px-3 py-1.5 text-sm font-medium rounded border border-gray-200 bg-white transition-colors\n          ${currentPage === 1 ? 'text-gray-300 cursor-not-allowed' : 'text-gray-600 hover:border-primary-300 hover:text-primary-600'}`}\n        aria-label=\"이전 페이지\"\n      >\n        이전\n      </button>\n\n      {/* 페이지 번호들 */}\n      {getPageNumbers().map((page, index) => (\n        <React.Fragment key={index}>\n          {page === '...' ? (\n            <span className=\"px-3 py-1.5 text-gray-400\">...</span>\n          ) : (\n            <button\n              onClick={() => onPageChange(page)}\n              className={`px-3 py-1.5 text-sm font-medium rounded border border-gray-200 bg-white transition-colors\n                ${currentPage === page\n                  ? 'text-primary-600 border-primary-600 font-bold cursor-default'\n                  : 'text-gray-600 hover:border-primary-300 hover:text-primary-600'}`}\n              disabled={currentPage === page}\n              aria-current={currentPage === page ? 'page' : undefined}\n            >\n              {page}\n            </button>\n          )}\n        </React.Fragment>\n      ))}\n\n      {/* 다음 페이지 버튼 */}\n      <button\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n        className={`px-3 py-1.5 text-sm font-medium rounded border border-gray-200 bg-white transition-colors\n          ${currentPage === totalPages ? 'text-gray-300 cursor-not-allowed' : 'text-gray-600 hover:border-primary-300 hover:text-primary-600'}`}\n        aria-label=\"다음 페이지\"\n      >\n        다음\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination; ","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/Layout';\nimport ArticleCard from 'components/ArticleCard';\nimport Pagination from 'components/Pagination';\n\nconst ArticlesPage = ({ data }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const articlesPerPage = 10;\n  \n  const articles = data.allMarkdownRemark.edges;\n  const totalPages = Math.ceil(articles.length / articlesPerPage);\n  \n  const startIndex = (currentPage - 1) * articlesPerPage;\n  const endIndex = startIndex + articlesPerPage;\n  const currentArticles = articles.slice(startIndex, endIndex);\n\n  return (\n    <Layout title=\"Articles - Senior Frontend Engineer : HungSun LIM\">\n      <div className=\"max-w-3xl mx-auto px-2 py-8\">\n        {/* 페이지 헤더 */}\n        <div className=\"mb-10\">\n          <h1 className=\"text-2xl font-bold mb-2 tracking-tight\">Articles</h1>\n          <p className=\"text-base text-gray-600\">\n            프론트엔드 개발, React, 그리고 웹 기술에 대한 글들을 공유합니다.\n          </p>\n        </div>\n\n        {/* 아티클 목록 */}\n        <div className=\"mb-8 space-y-4\">\n          {currentArticles.length > 0 ? (\n            currentArticles.map(({ node }) => (\n              <ArticleCard key={node.id} article={node} />\n            ))\n          ) : (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-400 text-base\">아직 작성된 글이 없습니다.</p>\n            </div>\n          )}\n        </div>\n\n        {/* 페이지네이션 */}\n        {totalPages > 1 && (\n          <Pagination \n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={setCurrentPage}\n          />\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            description\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 160)\n        }\n      }\n    }\n  }\n`;\n\nexport default ArticlesPage; "],"names":["_ref","article","frontmatter","fields","excerpt","React","className","Link","to","slug","title","description","date","tags","length","slice","map","tag","key","currentPage","totalPages","onPageChange","onClick","disabled","getPageNumbers","pages","i","push","page","index","undefined","data","setCurrentPage","useState","articles","allMarkdownRemark","edges","Math","ceil","startIndex","endIndex","currentArticles","Layout","_ref2","node","ArticleCard","id","Pagination"],"sourceRoot":""}